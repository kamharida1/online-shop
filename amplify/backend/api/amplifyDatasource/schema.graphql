type Product @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  title: String!
  description: String
  image: ImageObject
  images: [ImageObject!]!
  options: [String!]
  category: String
  avgRating: Float
  count: Int
  ratings: Int
  brand: String
  price: Float!
  oldPrice: Float
  CartProduct: CartProduct @hasOne
  OrderProduct: OrderProduct @hasOne
  productDetails: AWSJSON
  subtype: String
}

type ImageObject {
  url: String!
  originalUri: String!
}

type CartProduct @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  userSub: String!
  quantity: Int!
  option: String
  productID: ID!
  product: Product @belongsTo(fields: ["productID"])
}

type OrderProduct @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  quantity: Int!
  option: String
  productID: ID!
  product: Product @belongsTo(fields: ["productID"])
  orderID: ID!
  order: Order @belongsTo(fields: ["orderID"])
}

type Order @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  userSub: String!
  amount: Float
  addressID: ID!
  address: Address @hasOne
  OrderProduct: OrderProduct @hasOne
}

type Address @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  userSub: String!
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
  street: String!
  street2: String
  city: String!
  state: String!
  postalCode: String
  country: String
  isSelected: Boolean
}
 